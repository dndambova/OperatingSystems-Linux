03-a-0200.
Сортирайте /etc/passwd лексикографски по поле UserID.

cat /etc/passwd | sort -t ":" -k 3

03-a-0201.
Сортирайте /etc/passwd числово по поле UserID.
(Открийте разликите с лексикографската сортировка)

cat /etc/passwd | sort -n -t ":" -k 3

03-a-0210.
Изведете само 1-ва и 5-та колона на файла /etc/passwd спрямо разделител ":".

cat /etc/passwd | cut -f 1,5 -d :

03-a-0211.
Изведете съдържанието на файла /etc/passwd от 2-ри до 6-ти символ.

cat /etc/passwd | head -c 6 | tail -c 5

03-a-0212.
Отпечатайте потребителските имена и техните home директории от /etc/passwd.

cat /etc/passwd | cut -f 1,6 -d :

03-a-0213.
Отпечатайте втората колона на /etc/passwd, разделена спрямо символ '/'.

cat /etc/passwd | cut -f 2 -d "/"

03-a-1500.
Изведете броя на байтовете в /etc/passwd.
Изведете броя на символите в /etc/passwd.
Изведете броя на редовете  в /etc/passwd.

cat /etc/passwd | wc -c (bytes) 
cat /etc/passwd | wc -m (symbols)
cat /etc/passwd | wc -l (lines)

03-a-2000.
С отделни команди, извадете от файл /etc/passwd:
- първите 12 реда
- първите 26 символа
- всички редове, освен последните 4
- последните 17 реда
- 151-я ред (или друг произволен, ако нямате достатъчно редове)
- последните 4 символа от 13-ти ред (символът за нов ред не е част от реда)

head -n 12 /etc/passwd
head -c 26 /etc/passwd
head -n -4 /etc/passwd
cat /etc/passwd | tail -n 17
cat /etc/passwd | head -n 151 | tail -n 1
cat /etc/passwd | head -n 13 | tail -n 1 | tail -c 5 (new line symbol doesn't count)

03-a-3000.
Запаметете във файл в своята home директория резултатът от командата `df -P`.
Напишете команда, която извежда на екрана съдържанието на този файл, без първия ред (хедъра), сортирано по второ поле (numeric).

df -P > ~/dir1/popo
tail -n +2 ~/dir1/popo| sort -k 2 -n

03-a-3100.
Запазете само потребителските имена от /etc/passwd във файл users във вашата home директория.

cut -f 1 -d : /etc/passwd > ~/users

03-a-3500.
Изпишете всички usernames от /etc/passwd с главни букви.

cut -f 1 -d : /etc/passwd | tr a-z A-Z

03-a-5000.
Изведете реда от /etc/passwd, на който има информация за вашия потребител.
Изведедете този ред и двата реда преди него.
Изведете този ред, двата преди него, и трите след него.
Изведете *само* реда, който се намира 2 реда преди реда, съдържащ информация за вашия потребител.

whoami |xargs -I {} grep {} /etc/passwd
whoami |xargs -I {} grep -B2 {} /etc/passwd
whoami |xargs -I {} grep -B2 -A3 {} /etc/passwd
whoami |xargs -I {} grep -B2 {} /etc/passwd | head -n 1

03-a-5001.
Изведете колко потребители не изпозват /bin/bash за login shell според /etc/passwd
(hint: 'man 5 passwd' за информация какъв е форматът на /etc/passwd)

grep -v "/bin/bash" /etc/passwd | wc -l

03-a-5002.
Изведете само имената на хората с второ име по-дълго от 6 (>6) символа според /etc/passwd
cat /etc/passwd | cut -f 2 -d" " | cut -f 1 -d , | egrep ".{6,}"

03-a-5003.
Изведете имената на хората с второ име по-късо от 8 (<=7) символа според /etc/passwd // !(>7) = ?
cat /etc/passwd | cut -f 2 -d" " | cut -f 1 -d , | egrep "^.{,7}$"

03-a-5004.
Изведете целите редове от /etc/passwd за хората от 03-a-5003

cat /etc/passwd | cut -f 2 -d" " | cut -f 1 -d , | egrep "^.{,7}$" | sort | uniq | xargs -I {} egrep -w {} /etc/passwd

03-a-6000.                                                                                                                    !!!
Копирайте <РЕПО>/exercises/data/emp.data във вашата home директория.
Посредством awk, използвайки копирания файл за входнни данни, изведете:

- общия брой редове
- третия ред
- последното поле от всеки ред
- последното поле на последния ред
- всеки ред, който има повече от 4 полета
- всеки ред, чието последно поле е по-голямо от 4
- общия брой полета във всички редове
- броя редове, в които се среща низът Beth
- най-голямото трето поле и редът, който го съдържа
- всеки ред, който има поне едно поле
- всеки ред, който има повече от 17 знака
- броя на полетата във всеки ред и самият ред
- първите две полета от всеки ред, с разменени места
- всеки ред така, че първите две полета да са с разменени места
- всеки ред така, че на мястото на първото поле да има номер на реда
- всеки ред без второто поле
- за всеки ред, сумата от второ и трето поле
- сумата на второ и трето поле от всеки ред


03-b-0300.
Намерете само Group ID-то си от файлa /etc/passwd.

whoami |xargs -I {} grep {} /etc/passwd | cut -f 4 -d :

03-b-3400.
Колко коментара има във файла /etc/services ? Коментарите се маркират със символа #, след който всеки символ на реда се счита за коментар.

grep "#" /etc/services | wc -l

03-b-3500.
Колко файлове в /bin са 'shell script'-oве? (Колко файлове в дадена директория са ASCII text?)

                                                                                                                                                !!!
03-b-3600.
Направете списък с директориите на вашата файлова система, до които нямате достъп. Понеже файловата система може да е много голяма, търсете до 3 нива на дълбочина.

                                                                                                                                                !!!
03-b-4000.
Създайте следната файлова йерархия в home директорията ви:
dir5/file1
dir5/file2
dir5/file3

Посредством vi въведете следното съдържание:
file1:
1
2
3

file2:
s
a
d
f

file3:
3
2
1
45
42
14
1
52

Изведете на екрана:
	* статистика за броя редове, думи и символи за всеки един файл
	* статистика за броя редове и символи за всички файлове
	* общия брой редове на трите файла

*1) wc file1 ; wc file2; wc file3
*2) wc -l -m file1 file2 file3
*3) cat file1 file2 file3 | wc -l


03-b-4001.
Във file2 (inplace) подменете всички малки букви с главни.

sed -i 's/\(.\)/\U\1/g' f2 (-i is used to inplace the uper chars in the file) 

sed -i 's/\(.\)/\L\1/g' f2 (UPPER TO LOWER)
 
03-b-4002.
Във file3 (inplace) изтрийте всички "1"-ци.

sed -i 's/"//g' f3
sed -i "/1/d" f3 (/d to delete pattern matching line)

03-b-4003.
Изведете статистика за най-често срещаните 5 символa в трите файла.

cat f1 f2 f3 | grep -o . | sort | uniq -c | sort | tail -n 5 

03-b-4004.
Направете нов файл с име по ваш избор, чието съдържание е конкатенирани
съдържанията на file{1,2,3}.

cat f1 f2 f3 > new_file5

03-b-4005.
Прочетете текстов файл file1 и направете всички главни букви малки като
запишете резултата във file2.

sed -e 's/\(.\)/\L\1/g' f1 >> f2
cat f1 | tr [A-Z][a-z] [a-z][A-Z] >> f2 (all upper chars -> lower && all lower chars -> upper)


03-b-5200.
Намерете броя на символите, различни от буквата 'а' във файла /etc/passwd

cat /etc/passwd | grep -o . | grep -v "a" | wc -l

03-b-5300.
Намерете броя на уникалните символи, използвани в имената на потребителите от
/etc/passwd.

cat /etc/passwd | cut -f 5 -d : | cut -f 1 -d , | sed "s/ //1" | grep -o . | sort | uniq | wc -l

03-b-5400.
Отпечатайте всички редове на файла /etc/passwd, които не съдържат символния низ 'ов'.

grep -v "ов" /etc/passwd

03-b-6100.
Отпечатайте последната цифра на UID на всички редове между 28-ми и 46-ред в /etc/passwd.

cat /etc/passwd | cut -f 3 -d : | head -n 46| tail -n +28 | egrep -o "[[:digit:]]$"

03-b-6700.
Отпечатайте правата (permissions) и имената на всички файлове, до които имате
read достъп, намиращи се в директорията /tmp. (hint: 'man find', вижте -readable)

find /tmp -type f -readable -printf "%p %m \n" 2>/dev/null

03-b-6900.
Намерете имената на 10-те файла във вашата home директория, чието съдържание е
редактирано най-скоро. На първо място трябва да бъде най-скоро редактираният
файл. Намерете 10-те най-скоро достъпени файлове. (hint: Unix time)


03-b-7000.
да приемем, че файловете, които съдържат C код, завършват на `.c` или `.h`.
Колко на брой са те в директорията `/usr/include`?
Колко реда C код има в тези файлове?

find /usr/include -maxdepth 1 -type f -name "*.c" -o -name "*.h" |wc -l
find /usr/include -maxdepth 1 -type f -name "*.c" -o -name "*.h" |xargs -I {} cat {} | wc -l

03-b-7500.
Даден ви е ASCII текстов файл - /etc/services. Отпечатайте хистограма на 10-те най-често срещани думи.
Дума наричаме непразна последователност от букви. Не правим разлика между главни и малки букви.
Хистограма наричаме поредица от редове, всеки от които има вида:
<брой срещания> <какво се среща толкова пъти>


03-b-8000.
Вземете факултетните номера на студентите (описани във файла
<РЕПО>/exercises/data/mypasswd.txt) от СИ и ги запишете във файл si.txt сортирани.

Студент е част от СИ, ако home директорията на този потребител (според
<РЕПО>/exercises/data/mypasswd.txt) се намира в /home/SI директорията.


03-b-8500.
За всяка група от /etc/group изпишете "Hello, <група>", като ако това е вашата група, напишете "Hello, <група> - I am here!".


03-b-8600.
Shell Script-овете са файлове, които по конвенция имат разширение .sh. Всеки
такъв файл започва с "#!<interpreter>" , където <interpreter> указва на
операционната система какъв интерпретатор да пусне (пр: "#!/bin/bash",
"#!/usr/bin/python3 -u").

Намерете всички .sh файлове в директорията `/usr` и нейните поддиректории, и
проверете кой е най-често използваният интерпретатор.


03-b-8700.
1. Изведете GID-овете на 5-те най-големи групи спрямо броя потребители, за които
съответната група е основна (primary).
2. (*) Изведете имената на съответните групи.
Hint: /etc/passwd


03-b-9000.
Направете файл eternity. Намерете всички файлове, намиращи се във вашата home
директория и нейните поддиректории, които са били модифицирани в последните
15мин (по възможност изключете .).  Запишете във eternity името (път) на
файла и времето (unix time) на последната промяна.


03-b-9050.
Копирайте файл <РЕПО>/exercises/data/population.csv във вашата home директория.

ready

03-b-9051.
Използвайки файл population.csv, намерете колко е общото население на света
през 2008 година. А през 2016?

cat population.csv | grep 2008, | egrep -w -o --color "\<[[:digit:]]+$" | awk 'BEGIN{s=0}{s = s + $1} END{print s}'
cat population.csv | grep 2016, | egrep -w -o --color "\<[[:digit:]]+$" | awk 'BEGIN{s=0}{s = s + $1} END{print s}'

03-b-9052.
Използвайки файл population.csv, намерете през коя година в България има най-много население.

cat population.csv | grep "Bulgaria" | cut -f 3,4 -d ","|awk -F "," 'BEGIN{max=0}{if ($2>max)  max = $2}END{print max}' |xargs -I {} grep {} population.csv| cut -f 3 -d ","
cat population.csv | grep "Bulgaria" | sort -t "," -k 4 -r | head -n 1

03-b-9053.
Използвайки файл population.csv, намерете коя държава има най-много население през 2016. А коя е с най-малко население?
(Hint: Погледнете имената на държавите)

Variant(1)
cat population.csv | grep 2016, | egrep -w -o --color "\<[[:digit:]]+$" | sort -n | tail -n 1 |xargs -I {} grep {} population.csv
cat population.csv | grep 2016, | egrep -w -o --color "\<[[:digit:]]+$" | sort -n | head -n 1 |xargs -I {} grep {} population.csv
Variant(2)
cat population.csv | egrep -w "2016" | egrep -o '[[:upper:]][[:upper:]][[:upper:]],[[:digit:]].*'| sort -k 3 -t "," -n | tail -n 1 | xargs -I {} grep {} population.csv | cut -f 1 -d ","

03-b-9054.
Използвайки файл population.csv, намерете коя държава е на 42-ро място по
население през 1969. Колко е населението й през тази година?

cat population.csv | grep 1969, | egrep -w -o --color "\<[[:digit:]]+$" | sort -n -r| head -n 42 |tail -n 1 | xargs -I {} grep {} population.csv

03-b-9100.
В home директорията си изпълнете командата
curl -o songs.tar.gz "http://fangorn.uni-sofia.bg/misc/songs.tar.gz"

ready

03-b-9101.
Да се разархивира архивът songs.tar.gz в директория songs във вашата home директория.

mkdir ~/songs/
tar -xf songs.tar.gz -C ~/songs

03-b-9102.
Да се изведат само имената на песните.

ls songs | cut -f 2 -d "-" | sed -e 's/ //1' | cut -f 1 -d "("

03-b-9103.
Имената на песните да се направят с малки букви, да се заменят спейсовете с
долни черти и да се сортират.

03-b-9102 | sed -e "s/\(.\)/\L\1/g" | sed -e "s/ /_/g" | sort

ls songs | cut -f 2 -d "-" | sed -e 's/ //1' | cut -f 1 -d "(" | sed -e "s/\(.\)/\L\1/g" | sed -e "s/ /_/g" | sort 

03-b-9104.
Да се изведат всички албуми, сортирани по година.

ls songs | cut -f 2 -d "(" | cut -f 1 -d ")" | sort -k 2 -t , -n

03-b-9105.
Да се преброят/изведат само песните на Beatles и Pink.

ls songs | egrep --color  "^B|Pink -"
find ~/songs -type f | egrep --color "Beatles|Pink -"
find ~/songs -type f -name "Pink -*" -o -name "Beatles*"
find ~/songs -type f -name "Pink -*" -o -name "Beatles*" | wc -l (count of songs)

03-b-9106.
Да се направят директории с имената на уникалните групи. За улеснение, имената
от две думи да се напишат слято:

Beatles, PinkFloyd, Madness

ls songs | sort | cut -f 1 -d - |sed "s/ //g" | uniq |xargs -I {} mkdir {}

03-b-9200.
Напишете серия от команди, които извеждат детайли за файловете и директориите в
текущата директория, които имат същите права за достъп както най-големият файл
в /etc директорията.


03-b-9300.
Дадени са ви 2 списъка с email адреси - първият има 12 валидни адреса, а
вторията има само невалидни. Филтрирайте всички адреси, така че да останат
само валидните. Колко кратък регулярен израз можете да направите за целта?

Валидни email адреси (12 на брой):
email@example.com
firstname.lastname@example.com
email@subdomain.example.com
email@123.123.123.123
1234567890@example.com
email@example-one.com
_______@example.com
email@example.name
email@example.museum
email@example.co.jp
firstname-lastname@example.com
unusually.long.long.name@example.com

Невалидни email адреси:
#@%^%#$@#$@#.com
@example.com
myemail
Joe Smith <email@example.com>
email.example.com
email@example@example.com
.email@example.com
email.@example.com
email..email@example.com
email@-example.com
email@example..com
Abc..123@example.com
(),:;<>[\]@example.com
just"not"right@example.com
this\ is"really"not\allowed@example.com


03-b-9400.
Посредством awk, използвайки emp.data (от 03-a-6000.txt) за входнни данни,
изведете:

- всеки ред, като полетата са в обратен ред

(Разгледайте for цикли в awk)


03-b-9500.
Копирайте <РЕПО>/exercises/data/ssa-input.txt във вашата home директория.
Общият вид на файла е:

- заглавна част:
	Smart Array P440ar in Slot 0 (Embedded)

- една или повече секции за масиви:
	Array A
	Array B
	...
	като буквата (A, B, ...) е името на масива

- във всяка таква секция има една или повече подсекции за дискове:
	physicaldrive 2I:0:5
	physicaldrive 2I:0:6
	...

	като 2I:0:5 е името на диска

- във всяка подсекция за диск има множество параметри във вида:
	key name: value
	като за нас са интересни само:

		Current Temperature (C): 35
		Maximum Temperature (C): 36

Напишете поредица от команди която обработва файл в този формат, и генерира
следният изход:

A-2I:0:5 35 36
A-2I:0:6 34 35
B-1I:1:1 35 50
B-1I:1:2 35 49

x-yyyyyy zz ww

където:
	- x е името на масива
	- yyyyyy е името на диска
	- zz е current temperature
	- ww е max temperature











FOR CHEATSHEET :
03-B-4001
03-B-4002
03-B-4005
03-b-9101
03-b-9105.
03-b-9051.
03-b-9052.



























